import React, { useContext } from 'react';

var chainAsChildren = function chainAsChildren(children, component) {
  return React.cloneElement(component, {}, children);
};

var MultiProvider = function MultiProvider(_ref) {
  var children = _ref.children,
      providers = _ref.providers;
  return React.createElement(React.Fragment, null, providers.reduceRight(chainAsChildren, children));
};

var withContext = function withContext(Context, propsName) {
  return function (Component) {
    return function (props) {
      var _additionalProps;

      var value = useContext(Context);
      var additionalProps = (_additionalProps = {}, _additionalProps[propsName] = value, _additionalProps);
      return React.createElement(Component, Object.assign({}, props, additionalProps));
    };
  };
};

export { MultiProvider, withContext };
//# sourceMappingURL=index.modern.js.map
